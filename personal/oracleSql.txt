
MY SQL


select 
	 aa.impacted_system_id, max(aa.event_date)
FROM 
	abs_genie.abs_event_log  aa,
	abs_genie.abs_system bb
where 
	##impacted_system_id=116
	aa.impacted_system_id=bb.system_id
group by 
	aa.impacted_system_id 


select 
	 aa.impacted_system_id, system_name ,max(aa.event_date)
FROM 
	abs_genie.abs_event_log  aa,
	abs_genie.abs_system bb
where 
	##impacted_system_id=116
	aa.impacted_system_id=bb.system_id
group by 
	aa.impacted_system_id   ;


SELECT table_name, table_type, engine, TABLE_COMMENT 
FROM information_schema.tables 
Where TABLE_SCHEMA = 'mysql' 
order by engine desc; 


-----

execute system functions 

SELECT SYSTEM_USER();


-----

get all schema objects 

SELECT OBJECT_TYPE
	,OBJECT_SCHEMA
	,OBJECT_NAME
FROM (
	SELECT 'TABLE' AS OBJECT_TYPE
		,TABLE_NAME AS OBJECT_NAME
		,TABLE_SCHEMA AS OBJECT_SCHEMA
	FROM information_schema.TABLES
	
	UNION
	
	SELECT 'VIEW' AS OBJECT_TYPE
		,TABLE_NAME AS OBJECT_NAME
		,TABLE_SCHEMA AS OBJECT_SCHEMA
	FROM information_schema.VIEWS
	
	UNION
	
	SELECT 'INDEX[Type:Name:Table]' AS OBJECT_TYPE
		,CONCAT (
			CONSTRAINT_TYPE
			,' : '
			,CONSTRAINT_NAME
			,' : '
			,TABLE_NAME
			) AS OBJECT_NAME
		,TABLE_SCHEMA AS OBJECT_SCHEMA
	FROM information_schema.TABLE_CONSTRAINTS
	
	UNION
	
	SELECT ROUTINE_TYPE AS OBJECT_TYPE
		,ROUTINE_NAME AS OBJECT_NAME
		,ROUTINE_SCHEMA AS OBJECT_SCHEMA
	FROM information_schema.ROUTINES
	
	UNION
	
	SELECT 'TRIGGER[Schema:Object]' AS OBJECT_TYPE
		,CONCAT (
			TRIGGER_NAME
			,' : '
			,EVENT_OBJECT_SCHEMA
			,' : '
			,EVENT_OBJECT_TABLE
			) AS OBJECT_NAME
		,TRIGGER_SCHEMA AS OBJECT_SCHEMA
	FROM information_schema.triggers
	) R
    
    wHERE R.OBJECT_SCHEMA = 'world';
    
    -------
    
    
    IMP QUERIES
    
select * from INFORMATION_SCHEMA.TABLE_CONSTRAINTS 

select * from INFORMATION_SCHEMA.PROCESSLIST


select * from INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS 


select * from INFORMATION_SCHEMA.ROUTINES where routine_type ='PROCEDURE' and routine_schema ='world'


select * from INFORMATION_SCHEMA.ROUTINES where routine_type ='FUNCTION' and routine_schema ='world'

select * from      INFORMATION_SCHEMA.TRIGGERS


SHOW CREATE PROCEDURE `stateUpdate`;

SHOW CREATE FUNCTION `new_testFunction`;


SELECT *
FROM   information_schema.tables
 INNER
  JOIN information_schema.routines
    ON routines.routine_definition LIKE Concat('%', tables.table_name, '%');
 
