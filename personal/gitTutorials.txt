git clone will create local repository
------------------------------------------------
git commit -m " test" gitTutorials.txt

git commit will commit to local repository
git push will push changes to remove repository
changes in code in eclipse means local changes ie that has not commited to local reposoitory
cant see local repository its virtual


git reset 

remove files from staging area
----------------------------------------
git reset --hard
it will reset all changes to from local repository and make in sync to local working , any new files  would not be deleted, it will be in untracked files
ie any changes done locally will be removed and would be in sync with local repository ( not repository)

$ git reset --hard
HEAD is now at 98ae105d changes for java 9

Sumit.Garg@SEZ55CROSSCODE MINGW64 /f/withJRE/cs-plugin (csplugin_java9_withJRE)
$ git status
On branch csplugin_java9_withJRE
Your branch is up to date with 'origin/csplugin_java9_withJRE'.


---------

remove local untracked files from the current Git branch

git clean -n
will show which files will be removed

git clean -f
forcefull remove 

To remove directories, run git clean -f -d or git clean -fd
--------------
Unstaged changes :- 

the changes done in eclipse but not commited to local branch.

----------------------------------------------------
git pull origin master 

will pull changes from the origin remote, master branch and merge them to the local checked-out branch


git pull origin/master 

will pull changes from the locally stored branch origin/master and merge that to the local checked-out branch


-----
below command will only discard changes in working directory for given  file and make it in sync with local repository
 
 
 -----
 (before doing git diff brch1 brch2 , do a git pull)
 git diff   branch1   branch2
 
 will show difference between two branches
  
 git diff
 
 will show difference between local repository and workspace difference 
 
 -----------------
 
 
 git pull does a git fetch followed by a git merge.
  to bring a local branch up-to-date with its remote version
  it merges into local code  and updates files on which we are not working

 
 ------------------------
 git fetch really only downloads new data from a remote repository - but it
 doesn't integrate any of this new data into your working files. Fetch is great for getting a fresh view on all the things that happened in a remote repository.
 
 ----
 
 git push origin master
 
 pushes all changes to master branch
 
 -------
 
 below command would add file to staging area
 git add 
 
 ------
 
  git remote -v
 
 remote repository URL
 
 --------------
 
 .gitignore file contains all ignored files , manually we can add files to it
 
--------------

git log
will show history logs....

--------

scenario 1 ( if the file that we are working locally has been updated in remote repository ie remote repo is ahead in version )

local changes done but not added to staging or commited to remote branch and if we do  a pull , in that case 
it will throw below error and whole pull will be aborted , other files wont be updated from remote repository ie local repository wont get updated 

Please commit your changes or stash them before you merge.
Aborting


scenario 2  
local changes done , added to staging and commited to local repository and then we do a pull then 
it will merge non conflict changes , our changes stays , if conflict issue , it will add line
if need to pull either commit or reset to sync with local respository, if local workspace is in sync with local repository then pull will work  


PULL WILL ONLY BE ABORTED WHEN WE HAVE DONE SOME CHANGES LOCALLY AND NOT COMMITED  IT AND SAME FILE IN REMOTE REPO  UPDATED BY SOMEONE 
IF WE COMMIT AND THEN PULL THEN AUTOMERGING WILL BE DONE
--------------------------------

----------------------

 git push origin master will only push commited changes
 -----------
 below would add multiple files at a time
 git add a1.txt a2.txt 
---------------------------


what is origin in GIT 
"origin" is the name of the remote repository where you want to publish you commits. By convention, the default remote repository is called "origin"
 git remote -v
origin  https://github.com/sumitgarg79/myfirstrep.git (fetch)
origin  https://github.com/sumitgarg79/myfirstrep.git (push)
--------------------
below means :-  local workspace code =  remote repo code + ur changes ( ie safe to push  )
 git pull
Already up to date.

below means :-  remote repo code already updated by someone else
error: Your local changes to the following files would be overwritten by merge:
        personal/gitTutorials.txt
Please commit your changes or stash them before you merge.
Aborting
--------------------

files different between different branches

git diff  --name-status  remotes/origin/csplugin_java9  remotes/origin/csplugin_java9_withJRE
 
--------------

if u want to undo ur changes and take latest changes from remote 

git reset --hard then git pull
-------------------------------

proper way of pushing a file 

1.git add <fileName>
2.git commit -m "test" <fileName>
3.git pull 
4.if merging is done review the changes and perform below else no need to review and perform below 
5.git push origin master


-------
Tagging is generally used to capture a point in history that is used for a marked version release
By default, git tag will create a tag on the commit that HEAD is referencing
git reset --hard 1311 would set local repository to specific tag
---------------------------------
BRANCH 
git branch testMaster ( create a new branch from current branch , it will copy all code into new branch)
git push origin testMaster ( push changes to repository)

git branch -d testMaster  ( delete a branch locally) 
git push --delete origin testMaster ( delete a branch from repository)

---------------------------------------------------
git checkout testMaster (Switched to branch 'testMaster' from current branch and local code would be updated to code from the branch from which checkout done ie testMaster) 
git checkout gitTutorials.txt will undo local changes , ie local code will be replaced from the code in tbe current branch ) 

-------

git merge is used to merge branchessssss

1.git checkout testMaster ( branch into which code needs to be merged )
2.git merge master ( branch from which merge needs to be done)
3.git push origin testMaster  ( pushed changes into remote repository)
------------------------------------------
remove a file from repository

git rm  BookingWebservice.war
git commit -m "remove "
git push origin master

